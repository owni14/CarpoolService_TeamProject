<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.kh.team.mappers.message">
	<insert id="insertMessage">
		insert into message 
			(message_seq, receiver_m_id, receiver_admin_code, sender_m_id, sender_admin_code, content, blacklist_seq)
		values
			(seq_message.nextval, #{receiver_m_id,jdbcType=VARCHAR}, #{receiver_admin_code,jdbcType=VARCHAR},
				#{sender_m_id,jdbcType=VARCHAR}, #{sender_admin_code,jdbcType=VARCHAR}, #{content}, #{blacklist_seq,jdbcType=NUMERIC})
	</insert>
	<select id="adminCheckSendedMessage" resultType="int">
		select blacklist_seq from message
		where blacklist_seq is not null
	</select>
	
	<insert id="insertNoBlackMessage">
		insert into message (message_seq,receiver_m_id,receiver_admin_code,sender_m_id,sender_admin_code,content)
		values
		(seq_message.nextval,#{receiver_m_id,jdbcType=VARCHAR},
		#{receiver_admin_code,jdbcType=VARCHAR},
		#{sender_m_id,jdbcType=VARCHAR},
		#{sender_admin_code,jdbcType=VARCHAR},#{content})
	</insert>
	
	<select id="recAdminMessageListById" resultType="Map">
		select * from
			(select rownum rnum, b.* from
			    (select m.*, a.* 
			    from message m, admin a
			    where receiver_m_id = #{m_id}
			    and m.sender_admin_code is not null
			    and m.sender_admin_code = a.admin_code
			    order by senddate desc) b)
		where rnum between #{startRow} and #{endRow}
	</select>
	
	<select id="recUserMessageListById" resultType="MessageVo">
		select * from
			(select rownum rnum, b.* from
				(select * from message
				where receiver_m_id = #{m_id}
				and sender_m_id is not null
				order by senddate desc) b)
		where rnum between #{startRow} and #{endRow}
	</select>
	
	<select id="sendMessageListById" resultType="MessageVo">
		select * from
			(select rownum rnum, b.* from
				(select * from message
				where sender_m_id = #{m_id}
				order by senddate desc) b)
		where rnum between #{startRow} and #{endRow}
	</select>
	
	<select id="recAdminMessageCountById" resultType="int">
		select count(*) from message
		where receiver_m_id = #{m_id}
		and sender_admin_code is not null
	</select>
	
	<select id="recUserMessageCountById" resultType="int">
		select count(*) from message
		where receiver_m_id = #{m_id}
		and sender_m_id is not null
	</select>
	
	<select id="sendMessageCountById" resultType="int">
		select count(*) from message
		where sender_m_id = #{m_id}
	</select>
	
	<select id="lastMessageListById" resultType="Map">
		select * from
			(select rownum rnum, a.* from
				(select * 
					from message m, admin a
					where receiver_m_id = #{m_id}
					and m.sender_admin_code = a.admin_code(+)
					and m.opendate is null
					order by senddate desc) a)
		where rnum &lt; 4
	</select>
	

	<!-- 안읽은 쪽지 개수 -->
	<select id="noneReadMCount" resultType="int">
		select count(*) from message
		where receiver_m_id = #{m_id}
		and opendate is null
	</select>
	
	<!-- 쪽지 읽음 처리 -->
	<update id="openMessage">
		update message set 
		opendate = sysdate
		where message_seq = #{message_seq}
	</update>
	
	<select id="countAdminGetMessage" resultType="int">
		select count(*) from message
		where receiver_admin_code = #{receiver_admin_code} 
		<include refid="searchGetMessage"></include>
		and sender_admin_code != #{receiver_admin_code}
	</select>
	
	<select id="adminGetMessageList" resultType="MessageVo">
		select * from
		(select rownum rnum, a.* from
		(select * from message
		where receiver_admin_code = #{receiver_admin_code} 
		<include refid="searchGetMessage"></include>
		and sender_admin_code != #{receiver_admin_code}
		order by senddate desc) a)
		where rnum between #{startRow} and #{endRow}
	</select>
	
	<sql id="searchGetMessage">
		<if test = "searchType != null and keyword != null">
			<choose>
				<when test='searchType == "p"'>
					and sender_admin_code like '%' || #{keyword} || '%'
				</when>
				<when test='searchType == "c"'>
					and content like '%' || #{keyword} || '%'
				</when>
			</choose>
		</if>
	</sql>
	
	<select id="countAdminSendMessage" resultType="int">
		select count(*) from message
		where sender_admin_code = #{sender_admin_code}
		<include refid="searchSendMessage"></include>
		and receiver_admin_code is not null and receiver_admin_code != #{sender_admin_code}
	</select>
	
	<select id="adminSendMessageList" resultType="MessageVo">
		select * from
			(select rownum rnum, a.* from
			(select * from message
			where sender_admin_code = #{sender_admin_code}
			<include refid="searchSendMessage"></include>
			and receiver_admin_code is not null and receiver_admin_code !=
			#{sender_admin_code}
			order by senddate desc) a)
			where rnum between #{startRow} and #{endRow}
	</select>
	
	<sql id="searchSendMessage">
		<if test = "searchType != null and keyword != null">
			<choose>
				<when test='searchType == "p"'>
					and receiver_admin_code like '%' || #{keyword} || '%'
				</when>
				<when test='searchType == "c"'>
					and content like '%' || #{keyword} || '%'
				</when>
			</choose>
		</if>
	</sql>
	<select id="countAdminToMeMessage" resultType="int">
		select count(*) from message
		where sender_admin_code = #{sender_admin_code} 
		<include refid="searchSendtoMeMessage"></include>
		and receiver_admin_code is not null and
		receiver_admin_code = #{sender_admin_code}
	</select>
	
	<select id="adminToMeMessageList" resultType="MessageVo">
		select * from
		(select rownum rnum, a.* from
		(select * from message
		where sender_admin_code = #{sender_admin_code} 
		<include refid="searchSendtoMeMessage"></include>
		and receiver_admin_code is not null and
		receiver_admin_code = #{sender_admin_code}
		order by senddate desc) a)
		where rnum between #{startRow} and #{endRow}
	</select>
	
	<sql id="searchSendtoMeMessage">
		<if test = "searchType != null and keyword != null">
			<choose>
				<when test='searchType == "c"'>
					and content like '%' || #{keyword} || '%'
				</when>
			</choose>
		</if>
	</sql>

	
	<update id="readMessage">
		update message set
		opendate = sysdate
		where message_seq = #{message_seq}
	</update>




</mapper>